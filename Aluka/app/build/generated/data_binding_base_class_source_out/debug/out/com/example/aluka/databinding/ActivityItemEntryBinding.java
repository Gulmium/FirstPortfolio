// Generated by view binder compiler. Do not edit!
package com.example.aluka.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.aluka.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityItemEntryBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RadioButton bookRadio;

  @NonNull
  public final EditText itemNameEditText;

  @NonNull
  public final EditText itemNumberEditText;

  @NonNull
  public final EditText itemQuantityEditText;

  @NonNull
  public final RadioButton productRadio;

  @NonNull
  public final RadioGroup selectRadio;

  @NonNull
  public final Button submitButton;

  private ActivityItemEntryBinding(@NonNull LinearLayout rootView, @NonNull RadioButton bookRadio,
      @NonNull EditText itemNameEditText, @NonNull EditText itemNumberEditText,
      @NonNull EditText itemQuantityEditText, @NonNull RadioButton productRadio,
      @NonNull RadioGroup selectRadio, @NonNull Button submitButton) {
    this.rootView = rootView;
    this.bookRadio = bookRadio;
    this.itemNameEditText = itemNameEditText;
    this.itemNumberEditText = itemNumberEditText;
    this.itemQuantityEditText = itemQuantityEditText;
    this.productRadio = productRadio;
    this.selectRadio = selectRadio;
    this.submitButton = submitButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityItemEntryBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityItemEntryBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_item_entry, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityItemEntryBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bookRadio;
      RadioButton bookRadio = ViewBindings.findChildViewById(rootView, id);
      if (bookRadio == null) {
        break missingId;
      }

      id = R.id.itemNameEditText;
      EditText itemNameEditText = ViewBindings.findChildViewById(rootView, id);
      if (itemNameEditText == null) {
        break missingId;
      }

      id = R.id.itemNumberEditText;
      EditText itemNumberEditText = ViewBindings.findChildViewById(rootView, id);
      if (itemNumberEditText == null) {
        break missingId;
      }

      id = R.id.itemQuantityEditText;
      EditText itemQuantityEditText = ViewBindings.findChildViewById(rootView, id);
      if (itemQuantityEditText == null) {
        break missingId;
      }

      id = R.id.productRadio;
      RadioButton productRadio = ViewBindings.findChildViewById(rootView, id);
      if (productRadio == null) {
        break missingId;
      }

      id = R.id.selectRadio;
      RadioGroup selectRadio = ViewBindings.findChildViewById(rootView, id);
      if (selectRadio == null) {
        break missingId;
      }

      id = R.id.submitButton;
      Button submitButton = ViewBindings.findChildViewById(rootView, id);
      if (submitButton == null) {
        break missingId;
      }

      return new ActivityItemEntryBinding((LinearLayout) rootView, bookRadio, itemNameEditText,
          itemNumberEditText, itemQuantityEditText, productRadio, selectRadio, submitButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
